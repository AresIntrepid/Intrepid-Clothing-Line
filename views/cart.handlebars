<section class="cart-section">
    <h1 class="section-title">YOUR CART</h1>
    
    <div class="cart-items">
        <!-- Cart items will be dynamically populated via JavaScript -->
    </div>
    
    <div class="cart-summary">
        <p class="cart-total">Total: $<span id="cart-total-amount">0</span></p>
        <button class="button checkout-btn">Proceed to Checkout</button>
    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        displayCart();

        // Event delegation for all cart buttons
        document.querySelector('.cart-items').addEventListener('click', (e) => {
            const cartItem = e.target.closest('.cart-item');
            if (!cartItem) return;
            
            const itemId = cartItem.dataset.id;
            
            // Handle minus button
            if (e.target.classList.contains('minus')) {
                updateQuantity(itemId, 'decrease');
            }
            
            // Handle plus button
            if (e.target.classList.contains('plus')) {
                updateQuantity(itemId, 'increase');
            }
            
            // Handle remove button
            if (e.target.classList.contains('remove-item')) {
                removeItem(itemId);
            }
        });
    });

    function displayCart() {
        const cartItems = JSON.parse(localStorage.getItem('cart')) || [];
        const cartItemsContainer = document.querySelector('.cart-items');
        
        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = '<p class="empty-cart">Your cart is empty</p>';
            return;
        }
        
        cartItemsContainer.innerHTML = cartItems.map(item => `
            <div class="cart-item" data-id="${item.id}">
                <img src="${item.image}" alt="${item.name}" class="cart-item-image">
                <div class="cart-item-details">
                    <h3>${item.name}</h3>
                    <p class="price">$${item.price}</p>
                    <div class="quantity-controls">
                        <button class="quantity-btn minus">-</button>
                        <span class="quantity">${item.quantity}</span>
                        <button class="quantity-btn plus">+</button>
                    </div>
                </div>
                <button class="remove-item">Ã—</button>
            </div>
        `).join('');
        
        updateTotal();
    }

function updateQuantity(itemId, action) {
    const cart = JSON.parse(localStorage.getItem('cart')) || [];
    const itemIndex = cart.findIndex(item => item.id === itemId);
    
    if (itemIndex === -1) return;

    if (action === 'decrease') {
        if (cart[itemIndex].quantity > 1) {
            cart[itemIndex].quantity -= 1;
        } else {
            // If quantity would go to 0, remove the item
            cart.splice(itemIndex, 1);
        }
    } else if (action === 'increase') {
        cart[itemIndex].quantity += 1;
    }

    localStorage.setItem('cart', JSON.stringify(cart));
    
    // Check if cart is empty after update
    if (cart.length === 0) {
        document.querySelector('.cart-items').innerHTML = '<p class="empty-cart">Your cart is empty</p>';
        document.getElementById('cart-total-amount').textContent = '0.00';
    } else {
        displayCart(); // Refresh the display
    }
    
    updateCartCount(); // Update the cart count in header
    updateTotal(); // Update the total
}


function removeItem(itemId) {
    const cart = JSON.parse(localStorage.getItem('cart')) || [];
    const updatedCart = cart.filter(item => item.id !== itemId);
    localStorage.setItem('cart', JSON.stringify(updatedCart));
    displayCart(); // Refresh the display
    updateCartCount(); // Update the cart count in header
    updateTotal(); // Add this line to update the total
    
    // Check if cart is empty and display empty message
    if (updatedCart.length === 0) {
        document.querySelector('.cart-items').innerHTML = '<p class="empty-cart">Your cart is empty</p>';
        document.getElementById('cart-total-amount').textContent = '0.00';
    }
}
    
    function updateTotal() {
        const cartItems = JSON.parse(localStorage.getItem('cart')) || [];
        const total = cartItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);
        document.getElementById('cart-total-amount').textContent = total.toFixed(2);
    }

    function updateCartCount() {
        const cart = JSON.parse(localStorage.getItem('cart')) || [];
        const cartCount = cart.reduce((total, item) => total + item.quantity, 0);
        const cartCountElement = document.querySelector('.cart-count');
        if (cartCountElement) {
            cartCountElement.textContent = cartCount;
            cartCountElement.style.display = cartCount > 0 ? 'flex' : 'none';
        }
    }
</script>